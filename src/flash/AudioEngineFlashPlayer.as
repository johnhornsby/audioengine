package  {	import sequence.managers.SoundManager;		import flash.display.Sprite;	import flash.display.Sprite;	import flash.events.*;	import flash.external.ExternalInterface;	import flash.text.TextField;	import flash.utils.Timer;	import flash.text.TextFieldType;	import flash.text.TextFieldAutoSize;	import flash.ui.Mouse;			public class AudioEngineFlashPlayer extends Sprite {		private var _audioEngineNamespace:String;		private var _isJavaScriptReady:Boolean = false;		private var _soundManager:SoundManager;		private var _audioEngine:AudioEngine;				private var _instanceIDs:Array = [];		function AudioEngineFlashPlayer() {			init();		}																//PRIVATE		//_____________________________________________________________________________		private function init():void{			_audioEngine = new AudioEngine(this);			_audioEngineNamespace = loaderInfo.parameters.namespace + ".";			addEventListener(Event.ADDED_TO_STAGE,onAddedToStage);						//JS2F_preload([{label:"angry",mp3:"../sounds/angry.mp3",ogv:"sounds/angry.ogv"}]);		}				private function onAddedToStage(e:Event):void {						if (ExternalInterface.available) {				try {					sendMessageToJavaScript("Adding callback...\n");					ExternalInterface.addCallback("_JS2F_isFlashReady", JS2F_isFlashReady);					ExternalInterface.addCallback("_JS2F_preload", JS2F_preload);					ExternalInterface.addCallback("_JS2F_create", JS2F_create);					ExternalInterface.addCallback("_JS2F_play", JS2F_play);					ExternalInterface.addCallback("_JS2F_pause", JS2F_pause);					ExternalInterface.addCallback("_JS2F_stop", JS2F_stop);					ExternalInterface.addCallback("_JS2F_stopAll", JS2F_stopAll);					ExternalInterface.addCallback("_JS2F_setVolume", JS2F_setVolume);					if (checkJavaScriptReady()) {						sendMessageToJavaScript("JavaScript is ready.\n");					} else {						sendMessageToJavaScript("JavaScript is not ready, creating timer.\n");						var readyTimer:Timer = new Timer(100, 0);						readyTimer.addEventListener(TimerEvent.TIMER, timerHandler);						readyTimer.start();					}				} catch (error:SecurityError) {					sendMessageToJavaScript("A SecurityError occurred: " + error.message + "\n");				} catch (error:Error) {					sendMessageToJavaScript("An Error occurred: " + error.message + "\n");				}			} else {				sendMessageToJavaScript("External interface is not available for this container.");			}									create_btn.addEventListener(MouseEvent.CLICK,createSound);			play_btn.addEventListener(MouseEvent.CLICK,playSound);			pause_btn.addEventListener(MouseEvent.CLICK,pauseSound);			stop_btn.addEventListener(MouseEvent.CLICK,stopSound);			stopAll_btn.addEventListener(MouseEvent.CLICK,stopAllSound);			volume_sdr.minimum = 0;			volume_sdr.maximum = 100;			volume_sdr.value = 100;			volume_sdr.addEventListener(Event.CHANGE,onVolumeChange);					}		private function checkJavaScriptReady():Boolean {			var isReady:Boolean = ExternalInterface.call(_audioEngineNamespace+"_F2JS_isReady");			return isReady;		}		private function timerHandler(event:TimerEvent):void {			_isJavaScriptReady = checkJavaScriptReady();			sendMessageToJavaScript("Checking JavaScript status..."+_isJavaScriptReady+"\n");						if (_isJavaScriptReady) {				sendMessageToJavaScript("JavaScript is ready.\n");				Timer(event.target).stop();			}		}				private function createSound(e:MouseEvent):void {			var autoDestroy:Boolean = false;			var autoRewind:Boolean = true;			var autoStop:Boolean = false;			_instanceIDs.push(JS2F_create("angry",autoDestroy,autoRewind,autoStop));		}				private function playSound(e:MouseEvent):void {			JS2F_play("angry");		}				private function pauseSound(e:MouseEvent):void {			JS2F_pause("angry");		}				private function stopSound(e:MouseEvent):void {			var id:int = _instanceIDs.shift();			JS2F_stop("angry",id);					}				private function stopAllSound(e:MouseEvent):void {			JS2F_stopAll();		}				private function onVolumeChange(e:Event):void {			trace(volume_sdr.value);			JS2F_setVolume(volume_sdr.value/100);		}										//JavaScript to Flash Interface		//_______________________________________________________________________________		private function JS2F_isFlashReady(){			return true;		}				private function JS2F_preload(preloadObjects:Array):void {			_audioEngine.preload(preloadObjects);			sendMessageToJavaScript("JS2F_preload\n");		}				private function JS2F_create(label:String,autoDestroy:Boolean = true, autoRewind:Boolean = false, autoStop:Boolean = true):int {			var id:int = -1;			id = _audioEngine.create(label,autoDestroy,autoRewind,autoStop);			sendMessageToJavaScript("JS2F_create\n");			return id;		}		private function JS2F_play(label:String, id:int = -1):void {			var result:Boolean = _audioEngine.play(label,id);			sendMessageToJavaScript("JS2F_play "+label+"\n");		}				private function JS2F_pause(label:String, id:int = -1):void {			_audioEngine.pause(label,id);			sendMessageToJavaScript("JS2F_pause "+label+"\n");		}				private function JS2F_stop(label:String, id:int = -1):void {			_audioEngine.stop(label,id);			sendMessageToJavaScript("JS2F_stop "+label+"\n");		}				private function JS2F_stopAll():void {			_audioEngine.stopAll();			sendMessageToJavaScript("JS2F_stopAll\n");		}				private function JS2F_setVolume(volume:Number = 1):void {			_audioEngine.setVolume(volume);			sendMessageToJavaScript("JS2F_setVolume\n");		}						//PUBLIC		//______________________________________________________________________		public function sendMessageToJavaScript(message:String = "Hello From Flash"):void {			output.appendText(message);			ExternalInterface.call(_audioEngineNamespace+"_F2JS_messageToJavaScript","Flash: "+message);		}	}	}